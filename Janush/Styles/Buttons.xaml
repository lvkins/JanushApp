<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Janush"
    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <!--  Base button style  -->
    <Style
        x:Key="BaseButtonStyle"
        BasedOn="{StaticResource BaseStyle}"
        TargetType="{x:Type ButtonBase}">
        <Setter Property="Background" Value="{StaticResource BackgroundLighterBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ForegroundDarkBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="20,10" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">

                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="0"
                        SnapsToDevicePixels="True">

                        <Grid
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ContentPresenter />
                        </Grid>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource ForegroundDarkBrush}" />
                            <Setter Property="Opacity" Value=".5" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource BackgroundLightBrush}" />
                            <Setter Property="BorderThickness" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource BaseButtonStyle}" TargetType="{x:Type Button}" />
    <Style BasedOn="{StaticResource BaseButtonStyle}" TargetType="{x:Type ToggleButton}">
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{StaticResource BackgroundLightBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  A button that doesn't have particular style  -->
    <Style x:Key="Styleless" TargetType="{x:Type ButtonBase}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="TextBlock.TextWrapping" Value="Wrap" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  A link text buttons  -->
    <Style TargetType="{x:Type Hyperlink}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundVeryDarkBrush}" />
        <Setter Property="TextDecorations" Value="{x:Null}" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource AppDarkBlueBrush}" />
                <Setter Property="TextDecorations" Value="Underline" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Window control button  -->
    <Style
        x:Key="WindowControl"
        BasedOn="{StaticResource Styleless}"
        TargetType="{x:Type ButtonBase}">

        <Setter Property="Padding" Value="6" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <Viewbox>
                            <ContentPresenter />
                        </Viewbox>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource BackgroundLightBrush}" />
            </Trigger>
        </Style.Triggers>

    </Style>

    <!--  Toggle window control button  -->
    <Style
        x:Key="WindowControlToggle"
        BasedOn="{StaticResource WindowControl}"
        TargetType="{x:Type ToggleButton}">
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{StaticResource BackgroundLightBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  A workaround for the font size in buttons (make raw strings textblocks)  -->
    <DataTemplate DataType="{x:Type system:String}">
        <TextBlock Text="{Binding}">
            <TextBlock.Resources>
                <Style TargetType="{x:Type TextBlock}" />
            </TextBlock.Resources>
        </TextBlock>
    </DataTemplate>

</ResourceDictionary>