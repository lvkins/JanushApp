<UserControl
    x:Class="Janush.ProductListItem"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:gl="clr-namespace:System.Globalization;assembly=mscorlib"
    xmlns:local="clr-namespace:Janush"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignWidth="400"
    SnapsToDevicePixels="True"
    mc:Ignorable="d">

    <UserControl.Resources>
        <SolidColorBrush x:Key="Expander.MouseOver.Circle.Stroke" Color="#FF5593FF" />
        <SolidColorBrush x:Key="Expander.MouseOver.Circle.Fill" Color="#FFF3F9FF" />
        <SolidColorBrush x:Key="Expander.MouseOver.Arrow.Stroke" Color="#FF000000" />
        <SolidColorBrush x:Key="Expander.Pressed.Circle.Stroke" Color="#FF3C77DD" />
        <SolidColorBrush x:Key="Expander.Pressed.Circle.Fill" Color="#FFD9ECFF" />
        <SolidColorBrush x:Key="Expander.Pressed.Arrow.Stroke" Color="#FF000000" />
        <SolidColorBrush x:Key="Expander.Disabled.Circle.Stroke" Color="#FFBCBCBC" />
        <SolidColorBrush x:Key="Expander.Disabled.Circle.Fill" Color="#FFE6E6E6" />
        <SolidColorBrush x:Key="Expander.Disabled.Arrow.Stroke" Color="#FF707070" />
        <SolidColorBrush x:Key="Expander.Static.Circle.Fill" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="Expander.Static.Circle.Stroke" Color="#FF333333" />
        <SolidColorBrush x:Key="Expander.Static.Arrow.Stroke" Color="#FF333333" />
        <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="19" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid>
                                    <Grid.LayoutTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <TransformCollection>
                                                    <RotateTransform Angle="-90" />
                                                </TransformCollection>
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Grid.LayoutTransform>
                                    <Ellipse
                                        x:Name="circle"
                                        Width="19"
                                        Height="19"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Fill="{StaticResource Expander.Static.Circle.Fill}"
                                        Stroke="{StaticResource Expander.Static.Circle.Stroke}" />
                                    <Path
                                        x:Name="arrow"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Data="M 1,1.5 L 4.5,5 L 8,1.5"
                                        SnapsToDevicePixels="false"
                                        Stroke="{StaticResource Expander.Static.Arrow.Stroke}"
                                        StrokeThickness="2" />
                                </Grid>
                                <ContentPresenter
                                    Grid.Row="1"
                                    Margin="0,4,0,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Top"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="True" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="arrow" Property="Data" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.MouseOver.Circle.Stroke}" />
                                <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.MouseOver.Circle.Fill}" />
                                <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.Pressed.Circle.Stroke}" />
                                <Setter TargetName="circle" Property="StrokeThickness" Value="1.5" />
                                <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.Pressed.Circle.Fill}" />
                                <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.Pressed.Arrow.Stroke}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.Disabled.Circle.Stroke}" />
                                <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.Disabled.Circle.Fill}" />
                                <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.Disabled.Arrow.Stroke}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="19" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid>
                                    <Grid.LayoutTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <TransformCollection>
                                                    <RotateTransform Angle="180" />
                                                </TransformCollection>
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Grid.LayoutTransform>
                                    <Ellipse
                                        x:Name="circle"
                                        Width="19"
                                        Height="19"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Fill="{StaticResource Expander.Static.Circle.Fill}"
                                        Stroke="{StaticResource Expander.Static.Circle.Stroke}" />
                                    <Path
                                        x:Name="arrow"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Data="M 1,1.5 L 4.5,5 L 8,1.5"
                                        SnapsToDevicePixels="false"
                                        Stroke="{StaticResource Expander.Static.Arrow.Stroke}"
                                        StrokeThickness="2" />
                                </Grid>
                                <ContentPresenter
                                    Grid.Column="1"
                                    Margin="4,0,0,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="True" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="arrow" Property="Data" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.MouseOver.Circle.Stroke}" />
                                <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.MouseOver.Circle.Fill}" />
                                <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.Pressed.Circle.Stroke}" />
                                <Setter TargetName="circle" Property="StrokeThickness" Value="1.5" />
                                <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.Pressed.Circle.Fill}" />
                                <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.Pressed.Arrow.Stroke}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.Disabled.Circle.Stroke}" />
                                <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.Disabled.Circle.Fill}" />
                                <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.Disabled.Arrow.Stroke}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="19" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid>
                                    <Grid.LayoutTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <TransformCollection>
                                                    <RotateTransform Angle="90" />
                                                </TransformCollection>
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Grid.LayoutTransform>
                                    <Ellipse
                                        x:Name="circle"
                                        Width="19"
                                        Height="19"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Fill="{StaticResource Expander.Static.Circle.Fill}"
                                        Stroke="{StaticResource Expander.Static.Circle.Stroke}" />
                                    <Path
                                        x:Name="arrow"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Data="M 1,1.5 L 4.5,5 L 8,1.5"
                                        SnapsToDevicePixels="false"
                                        Stroke="{StaticResource Expander.Static.Arrow.Stroke}"
                                        StrokeThickness="2" />
                                </Grid>
                                <ContentPresenter
                                    Grid.Row="1"
                                    Margin="0,4,0,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Top"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="True" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="arrow" Property="Data" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.MouseOver.Circle.Stroke}" />
                                <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.MouseOver.Circle.Fill}" />
                                <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.Pressed.Circle.Stroke}" />
                                <Setter TargetName="circle" Property="StrokeThickness" Value="1.5" />
                                <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.Pressed.Circle.Fill}" />
                                <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.Pressed.Arrow.Stroke}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.Disabled.Circle.Stroke}" />
                                <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.Disabled.Circle.Fill}" />
                                <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.Disabled.Arrow.Stroke}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderHeaderFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle
                                Margin="0"
                                SnapsToDevicePixels="true"
                                Stroke="Black"
                                StrokeDashArray="1 2"
                                StrokeThickness="1" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="19" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <!--<Ellipse
                                    x:Name="circle"
                                    Width="19"
                                    Height="19"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Fill="{StaticResource Expander.Static.Circle.Fill}"
                                    Stroke="{StaticResource Expander.Static.Circle.Stroke}" />-->
                                <Viewbox
                                    Width="19"
                                    Height="19"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
                                    <Path
                                        x:Name="arrow"
                                        Margin="1"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Data="M 1,1.5 L 4.5,5 L 8,1.5"
                                        SnapsToDevicePixels="False"
                                        Stroke="{StaticResource Expander.Static.Arrow.Stroke}"
                                        StrokeThickness="0.3" />
                                </Viewbox>
                                <ContentPresenter
                                    Grid.Column="1"
                                    Margin="4,0,0,0"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Center"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="True" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="arrow" Property="Data" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <!--<Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.MouseOver.Circle.Stroke}" />-->
                                <!--<Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.MouseOver.Circle.Fill}" />-->
                                <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <!--<Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.Pressed.Circle.Stroke}" />-->
                                <!--<Setter TargetName="circle" Property="StrokeThickness" Value="1.5" />-->
                                <!--<Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.Pressed.Circle.Fill}" />-->
                                <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.Pressed.Arrow.Stroke}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <!--<Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.Disabled.Circle.Stroke}" />-->
                                <!--<Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.Disabled.Circle.Fill}" />-->
                                <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.Disabled.Arrow.Stroke}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ExpanderStyle1" TargetType="{x:Type Expander}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0.35" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                            <DockPanel>
                                <ToggleButton
                                    x:Name="HeaderSite"
                                    MinWidth="0"
                                    MinHeight="0"
                                    Margin="1"
                                    Padding="{TemplateBinding Padding}"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Header}"
                                    ContentTemplate="{TemplateBinding HeaderTemplate}"
                                    ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                    DockPanel.Dock="Top"
                                    FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    FontSize="{TemplateBinding FontSize}"
                                    FontStretch="{TemplateBinding FontStretch}"
                                    FontStyle="{TemplateBinding FontStyle}"
                                    FontWeight="{TemplateBinding FontWeight}"
                                    Foreground="{TemplateBinding Foreground}"
                                    IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{StaticResource ExpanderDownHeaderStyle}" />
                                <ContentPresenter
                                    x:Name="ExpandSite"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    DockPanel.Dock="Bottom"
                                    Focusable="False"
                                    Visibility="Collapsed" />
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="true">
                                <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                                <Setter Property="Background" Value="{StaticResource BackgroundLightBrush}" />
                                <!--<Setter Property="BorderBrush" Value="{StaticResource ForegroundDarkerBrush}" />-->
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Right">
                                <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Right" />
                                <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Left" />
                                <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderRightHeaderStyle}" />
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Up">
                                <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Top" />
                                <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Bottom" />
                                <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderUpHeaderStyle}" />
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Left">
                                <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Left" />
                                <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Right" />
                                <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderLeftHeaderStyle}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Border Padding="0" SnapsToDevicePixels="True">

        <!--  Line Separator  -->
        <!--<Border.BorderBrush>
            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                <GradientStop Offset="0.0" Color="{StaticResource BackgroundLighter}" />
                <GradientStop Offset="0.5" Color="{StaticResource ForegroundDarker}" />
                <GradientStop Offset="1.0" Color="{StaticResource BackgroundLighter}" />
            </LinearGradientBrush>
        </Border.BorderBrush>-->

        <!--  Faded effect if product tracking is disabled  -->
        <Border.Style>
            <Style TargetType="{x:Type Border}">
                <Setter Property="Background" Value="{StaticResource BackgroundLighterBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource AppBlueBrush}" />
                <Setter Property="BorderThickness" Value="0,0,0,0.5" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource BackgroundMainBrush}" />
                    </Trigger>
                    <DataTrigger Binding="{Binding Tracked}" Value="False">
                        <Setter Property="Opacity" Value="0.5" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>

        <!--  The product values  -->
        <Expander
            Margin="0"
            Padding="10"
            Background="Transparent"
            BorderThickness="0"
            IsExpanded="{Binding IsSelected}"
            Style="{StaticResource ExpanderStyle1}">

            <!--<Expander.Style>
                <Style BasedOn="{StaticResource ExpanderStyle1}" TargetType="{x:Type Expander}">
                    <Setter Property="Background" Value="Transparent" />
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource BackgroundMainBrush}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Expander.Style>-->

            <!--  Expander header content  -->
            <Expander.Header>
                <StackPanel>

                    <!--  Product Name  -->
                    <TextBlock
                        HorizontalAlignment="Center"
                        FontSize="{StaticResource FontSizeRegular}"
                        ToolTip="Open product website in browser">
                        <Hyperlink Command="{Binding NavigateCommand}">
                            <Run Text="{Binding Name, Mode=OneWay, FallbackValue=Product Name}" />
                        </Hyperlink>
                    </TextBlock>

                    <!--  Price and options button  -->
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <!--  Current price  -->
                            <ColumnDefinition Width="*" />

                            <!--  Options button  -->
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <!--  Current price  -->
                        <TextBlock
                            Grid.Column="0"
                            FontSize="{StaticResource FontSizeXLarge}"
                            Text="{Binding DisplayPrice, FallbackValue=1234$}"
                            TextWrapping="Wrap" />

                        <!--  Product options  -->
                        <Button
                            x:Name="OptionsButton"
                            Grid.Column="1"
                            Padding="10,0"
                            VerticalAlignment="Center"
                            Command="{Binding ToggleOptionsPopupCommand}"
                            Content="..."
                            Visibility="{Binding IsMouseOver, Converter={local:BooleanToVisibilityConverter}, ConverterParameter=True, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Expander}}}" />

                        <!--  Product options popup menu  -->
                        <Popup
                            AllowsTransparency="True"
                            HorizontalOffset="0"
                            IsOpen="{Binding ShowOptionsPopupMenu}"
                            Placement="Bottom"
                            PlacementTarget="{Binding ElementName=OptionsButton}"
                            SnapsToDevicePixels="False"
                            StaysOpen="{Binding IsMouseOver, ElementName=OptionsButton}"
                            VerticalOffset="2">
                            <Border BorderBrush="{StaticResource ForegroundDarkerBrush}" BorderThickness="0.5">
                                <StackPanel Background="{StaticResource BackgroundLighterBrush}">
                                    <ItemsControl>
                                        <!--  Open in browser  -->
                                        <MenuItem Command="{Binding NavigateCommand}" Header="Open in browser" />
                                        <!--  Toggle tracking  -->
                                        <MenuItem
                                            Command="{Binding StopTrackingCommand}"
                                            Header="Stop tracking"
                                            Visibility="{Binding Tracked, Converter={local:BooleanToVisibilityConverter}, ConverterParameter=True}" />
                                        <MenuItem
                                            Command="{Binding StartTrackingCommand}"
                                            Header="Start tracking"
                                            Visibility="{Binding Tracked, Converter={local:BooleanToVisibilityConverter}}" />
                                        <!--  Separator  -->
                                        <Separator Background="{StaticResource BackgroundMainBrush}" />
                                        <!--  Delete  -->
                                        <MenuItem
                                            Command="{Binding DeleteCommand}"
                                            Foreground="#FF0000"
                                            Header="Delete Product" />
                                    </ItemsControl>
                                </StackPanel>
                            </Border>
                        </Popup>
                    </Grid>

                    <!--  Host and last check  -->
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <!--  Host  -->
                        <TextBlock
                            Grid.Column="0"
                            VerticalAlignment="Center"
                            Text="{Binding Url.Host, FallbackValue=example.com}" />

                        <!--  Last check  -->
                        <TextBlock
                            Grid.Column="1"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Text="{Binding LastCheck, FallbackValue=5 minutes ago, Converter={local:HumanRelativeTimeConverter}}"
                            Visibility="{Binding CurrentlyUpdating, Converter={local:BooleanToVisibilityConverter}}" />

                        <!--  Last check - updating now  -->
                        <StackPanel
                            Grid.Column="1"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Orientation="Horizontal"
                            Visibility="{Binding CurrentlyUpdating, FallbackValue=Collapsed, Converter={local:BooleanToVisibilityConverter}, ConverterParameter=True}">
                            <Border
                                Width="12"
                                Height="12"
                                Margin="0,0,5,0"
                                Style="{StaticResource SpinningText}">
                                <Border.Background>
                                    <VisualBrush Visual="{StaticResource Vector.Spinner}" />
                                </Border.Background>
                            </Border>

                            <TextBlock Text="Updating..." />
                        </StackPanel>
                    </Grid>

                </StackPanel>
            </Expander.Header>

            <!--  Expanded content  -->
            <StackPanel>

                <!--  Original name  -->
                <Border Margin="0,5">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0" Text="Original name:" />
                        <TextBlock Grid.Column="1" Text="{Binding OriginalName, FallbackValue=Original Name}" />
                    </Grid>
                </Border>

                <!--  Site URL  -->
                <Border Margin="0,5">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0" Text="Site:" />
                        <TextBlock Grid.Column="1" Text="{Binding Url.Host, FallbackValue=example.com}" />
                    </Grid>
                </Border>

                <!--  Last check  -->
                <Border Margin="0,5">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0" Text="Last check:" />
                        <TextBlock Grid.Column="1" Text="{Binding LastCheck, StringFormat=f, ConverterCulture={x:Static gl:CultureInfo.CurrentUICulture}}" />
                    </Grid>
                </Border>

                <!--  Date added  -->
                <Border Margin="0,5">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0" Text="Tracking since:" />
                        <TextBlock Grid.Column="1" Text="{Binding DateAdded, StringFormat=f, ConverterCulture={x:Static gl:CultureInfo.CurrentUICulture}}" />
                    </Grid>
                </Border>

            </StackPanel>
        </Expander>
    </Border>
</UserControl>
