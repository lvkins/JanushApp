<UserControl
    x:Class="Janush.ProductListItemCondensed"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:Janush"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <UserControl.Resources>
        <!--  Selected item styling  -->

        <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="{x:Type TextBlock}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource BackgroundLighterBrush}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style BasedOn="{StaticResource {x:Type Hyperlink}}" TargetType="Hyperlink">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource BackgroundLighterBrush}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style
            x:Key="HelpBlock"
            BasedOn="{StaticResource HelpBlock}"
            TargetType="{x:Type TextBlock}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource BackgroundLighterBrush}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

    </UserControl.Resources>

    <Border x:Name="MainBorder">

        <!--  Show details on double click  -->
        <Border.InputBindings>
            <MouseBinding Command="{Binding ShowDetailsPageCommand}" MouseAction="LeftDoubleClick" />
        </Border.InputBindings>

        <Border.Style>
            <Style TargetType="{x:Type Border}">
                <Setter Property="Background" Value="{StaticResource BackgroundLighterBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource ForegroundDarkerBrush}" />
                <Setter Property="BorderThickness" Value="0,0,0,0.2" />
                <Setter Property="SnapsToDevicePixels" Value="True" />

                <Style.Triggers>
                    <!--  Selected item style  -->
                    <DataTrigger Binding="{Binding IsSelected}" Value="True">
                        <Setter Property="Background" Value="{StaticResource AppBlueBrush}" />

                        <!--  Animate to default color  -->
                        <DataTrigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetProperty="Background.Color"
                                        From="{StaticResource AppBlue}"
                                        To="{StaticResource BackgroundLighter}"
                                        Duration="0:0:.5" />
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.ExitActions>
                    </DataTrigger>

                    <!--  Background for product having disabled tracking  -->
                    <DataTrigger Binding="{Binding Tracked}" Value="False">
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Opacity=".2" Color="{StaticResource AppRed}" />
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>

        <Grid VerticalAlignment="Center">
            <Grid.ColumnDefinitions>
                <!--  Icon  -->
                <ColumnDefinition Width="Auto" />

                <!--  Name / Summary  -->
                <ColumnDefinition Width="*" />

                <!--  Price  -->
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <!--  Selected item inner border  -->
            <Rectangle
                Grid.ColumnSpan="3"
                Margin="1"
                Panel.ZIndex="1"
                Opacity=".3"
                Stroke="{StaticResource BackgroundLighterBrush}"
                StrokeThickness="1"
                Visibility="{Binding IsSelected, Converter={local:BooleanToVisibilityConverter}, ConverterParameter=True}" />

            <!--  Right side overlay effect on mouse over  -->
            <Border
                x:Name="OptionsOverlay"
                Grid.ColumnSpan="3"
                Panel.ZIndex="3"
                IsHitTestVisible="False">

                <!--  Visibility behavior  -->
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Setter Property="Background">
                            <Setter.Value>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                    <GradientStop Offset="0.75" Color="Transparent" />
                                    <GradientStop Offset="0.87" Color="{StaticResource BackgroundLighter}" />
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type local:ProductListItemCondensed}}}" Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ShowOptionsPopupMenu}" Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                <Setter Property="Background" Value="Transparent" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Tracked}" Value="False">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush Opacity=".2" StartPoint="0,0" EndPoint="1,0">
                                            <GradientStop Offset="0.75" Color="Transparent" />
                                            <GradientStop Offset="0.87" Color="{StaticResource AppRed}" />
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>

            <!--  Highlight effect when selected  -->
            <Border
                Grid.ColumnSpan="3"
                IsHitTestVisible="False"
                Visibility="{Binding IsSelected, FallbackValue=Collapsed, Converter={local:BooleanToVisibilityConverter}, ConverterParameter=True}">
                <Border.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                        <GradientStop Offset="0.0" Color="Transparent" />
                        <GradientStop Offset="1.0" Color="{StaticResource AppBlue}" />
                    </LinearGradientBrush>
                </Border.Background>
            </Border>

            <!--  Icon  -->
            <Border
                Grid.Column="0"
                Width="18"
                Height="18"
                Margin="5"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                SnapsToDevicePixels="True"
                UseLayoutRounding="True">
                <Border.ToolTip>
                    <MultiBinding Converter="{local:TrackingStatusToDisplayStringConverter}">
                        <Binding Path="Error" />
                        <Binding Path="TrackingStatus" />
                    </MultiBinding>
                </Border.ToolTip>
                <Border.Background>
                    <VisualBrush Stretch="Uniform" Visual="{Binding TrackingStatus, Converter={local:TrackingStatusToVectorConverter}}" />
                </Border.Background>
            </Border>

            <!--  Name / Summary  -->
            <StackPanel
                Grid.Column="1"
                Margin="5"
                VerticalAlignment="Center"
                Orientation="Vertical">

                <!--  Product Name  -->
                <TextBlock
                    FontSize="{StaticResource FontSizeRegular}"
                    TextTrimming="CharacterEllipsis"
                    TextWrapping="NoWrap"
                    ToolTip="Open product website in browser">
                    <Hyperlink Command="{Binding NavigateCommand}">
                        <Run Text="{Binding Name, Mode=OneWay, FallbackValue=Product Name}" />
                    </Hyperlink>
                </TextBlock>

                <!--  Summary  -->
                <TextBlock Style="{StaticResource HelpBlock}">
                    <Run Text="{Binding Url.Host, Mode=OneWay, FallbackValue=example.com}" /><Run Text="," />
                    <Run Text="{Binding LastCheck, Mode=OneWay, FallbackValue=5 minutes ago, Converter={local:HumanRelativeTimeConverter}}" />
                </TextBlock>

            </StackPanel>

            <!--  Price  -->
            <TextBlock
                Grid.Column="2"
                Margin="5"
                VerticalAlignment="Center"
                FontSize="{StaticResource FontSizeXLarge}"
                Text="{Binding DisplayPrice, FallbackValue=1234$}"
                TextWrapping="Wrap">

                <!--  Light foreground when selected  -->
                <TextBlock.Style>
                    <Style BasedOn="{StaticResource HelpBlock}" TargetType="{x:Type TextBlock}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource BackgroundLighterBrush}" />
                                <Setter Property="Opacity" Value=".5" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>

            </TextBlock>

            <!--  Price and overlay button  -->

            <!--  Options button  -->
            <ToggleButton
                x:Name="OptionsButton"
                Grid.Column="2"
                Margin="5"
                HorizontalAlignment="Right"
                VerticalAlignment="Center"
                Panel.ZIndex="3"
                Command="{Binding ToggleOptionsPopupCommand}"
                Content="OPTIONS"
                Visibility="{Binding Visibility, ElementName=OptionsOverlay}">
                <ToggleButton.Style>
                    <Style BasedOn="{StaticResource {x:Type ToggleButton}}" TargetType="{x:Type ToggleButton}">
                        <Setter Property="IsChecked" Value="False" />
                        <Setter Property="FontSize" Value="{StaticResource FontSizeSmaller}" />
                        <Setter Property="Padding" Value="5,0" />

                        <!--  Keep checked until popup is open  -->
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ShowOptionsPopupMenu}" Value="True">
                                <Setter Property="IsChecked" Value="True" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ToggleButton.Style>
            </ToggleButton>

            <!--  Product options popup menu  -->
            <Popup
                AllowsTransparency="True"
                HorizontalOffset="0"
                IsOpen="{Binding ShowOptionsPopupMenu}"
                Placement="Bottom"
                PlacementTarget="{Binding ElementName=OptionsButton}"
                SnapsToDevicePixels="False"
                StaysOpen="{Binding IsMouseOver, ElementName=OptionsButton}"
                VerticalOffset="2">
                <Border BorderBrush="{StaticResource ForegroundDarkerBrush}" BorderThickness="0.5">
                    <StackPanel Background="{StaticResource BackgroundLighterBrush}">
                        <ItemsControl>
                            <!--  Details  -->
                            <MenuItem
                                Command="{Binding ShowDetailsPageCommand}"
                                FontWeight="SemiBold"
                                Header="Details" />

                            <!--  Edit  -->
                            <MenuItem Command="{Binding ShowEditPageCommand}" Header="Edit" />

                            <!--  Open in browser  -->
                            <MenuItem Command="{Binding NavigateCommand}" Header="Open in browser" />

                            <!--  Toggle tracking  -->
                            <MenuItem
                                Command="{Binding StopTrackingCommand}"
                                Header="Stop tracking"
                                Visibility="{Binding Tracked, Converter={local:BooleanToVisibilityConverter}, ConverterParameter=True}" />
                            <MenuItem
                                Command="{Binding StartTrackingCommand}"
                                Header="Start tracking"
                                Visibility="{Binding Tracked, Converter={local:BooleanToVisibilityConverter}}" />

                            <!--  Separator  -->
                            <Separator Background="{StaticResource BackgroundMainBrush}" />

                            <!--  Export to CSV  -->
                            <MenuItem Command="{Binding ExportCsvCommand}" Header="Export to CSV file" />

                            <!--  Separator  -->
                            <Separator Background="{StaticResource BackgroundMainBrush}" />

                            <!--  Delete  -->
                            <MenuItem
                                Command="{Binding DeleteCommand}"
                                Foreground="#FF0000"
                                Header="Delete Product" />
                        </ItemsControl>
                    </StackPanel>
                </Border>
            </Popup>

        </Grid>
    </Border>
</UserControl>
